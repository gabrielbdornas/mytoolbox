[tool.poetry]
name = "mytoolbox"
version = "0.1.0"
description = ""
authors = ["Gabriel Dornas <gabrielbdornas@gmail.com>"]
readme = "README.md"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.dependencies]
python = "^3.10"
unidecode = "^1.3.6"

[tool.pytest.ini_options]
pythonpath = "."
addopts = "--doctest-modules"

[tool.isort]
profile = "black"
line_length = 79

[tool.poetry.scripts]
snake-small-case =  'mytoolbox.normalize_table_columns:snake_small_case'

[tool.poetry.group.dev.dependencies]
pytest = "^7.2.2"
pytest-cov = "^4.0.0"
isort = "^5.12.0"
taskipy = "^1.10.4"

[tool.poetry.group.doc.dependencies]
mkdocs = "^1.4.2"
mkdocs-material = "^9.1.4"
mkdocstrings = "^0.20.0"
mkdocstrings-python = "^0.8.3"

[tool.taskipy.settings]
use_vars = true

[tool.taskipy.variables]
lint-check = "--check --diff ."

[tool.taskipy.tasks]
doc-server = { cmd = "mkdocs serve", help = "Start local mkdocs documentation server." }

blue = { cmd = "blue .", help = "Format code style with blue." }

blue-check = { cmd = "blue {lint-check}", help = "Check code style with blue." }

isort = { cmd = "isort .", help = "Format code imports with isort." }

isort-check = { cmd = "isort {lint-check}", help = "Check code imports with isort." }

lint = { cmd = "task blue && task isort", help = "Code lint with blue and isort." }

lint-check = { cmd = "task blue-check && task isort-check", help = "Code lint checks with blue and isort." }

pre_test = { cmd = "task lint", help = "Run lint before tests." }

test = { cmd = "pytest -s -x", help = "Run pytests with better messages and stop after first error." }

test-cov = { cmd = "pytest --cov=mytoolbox && coverage html", help = "Run test coverage report." }

test-cov-clean = { cmd = "pytest --cov=mytoolbox | grep TOTAL", help = "Run test coverage percentage result." }

test-cov-html = { cmd = "coverage html", help = "Create coverage report html." }

post_test = { cmd = "task test-cov-html", help = "Create coverage report after test." }